var sessionsList = new Array();
var searchHandle = {};
var clearHandle = {};
var PURGEOVERMINUTES = 20;

searchHandle['A1'] = function(session, data) {
  clearHandle['A1'](session);
  session.currentCol = 'A1';
  session.injuryGrp = data.injuryGrp;
  session.anatomyGrp  = data.anatomyGrp;
  session.side = data.side;
};
searchHandle['A2'] = function(session, data) {
  clearHandle['A2'](session);
  session.currentCol = 'A2';  
  session.a1 = data.val;
};
searchHandle['T1'] = function(session, data) {
  clearHandle['T1'];
  session.currentCol = 'T1';  
  session.a2 = data.val;
  };
searchHandle['T2']  = function(session, data) {
  clearHandle['T2'](session); 
  session.currentCol = 'T2'; 
  session.t1 = data.val;
}; 
searchHandle['DND']  = function(session, data) {
  clearHandle['DND'](session); 
  session.currentCol = 'DND'; 
  session.t2 = data.val ;
};  
searchHandle['FB']  = function(session, data) {
  clearHandle['FB'](session); 
  session.currentCol = 'FB'; 
  session.dnd = data.val;
};
searchHandle['7th'] = function(session, data) {
  clearHandle['7th'](session); 
  session.currentCol = '7th'; 
  session.fb = data.val;
};
searchHandle['done'] = function(session, data) {
  clearHandle['7th'](session); 
  session.currentCol = '7th'; 
  session.seventh = data.val;
};
clearHandle['A1'] = function(session) {session.a1 = null; clearHandle['A2'](session);}
clearHandle['A2'] = function(session) {session.a2 = null; clearHandle['T1'](session);};
clearHandle['T1'] = function(session) {session.t1 = null; clearHandle['T2'](session);};
clearHandle['T2']  = function(session) {session.t2 = null; clearHandle['DND'](session);}; 
clearHandle['DND']  = function(session) {session.dnd = null; clearHandle['FB'](session);};  
clearHandle['FB']  = function(session) {session.fb = null; clearHandle['7th'](session);};
clearHandle['7th']  = function(session) {session.seventh = null; clearHandle['done'](session);};
clearHandle['done'] = function(session) {console.log("DONE");};

function Session(sid) {
  var id;
  if (sid) {
    this.id = sid;
  } else {
    //this.id = (new Date().getTime()*Math.random()*23);
    this.id = {com1:new Date().getTime(),com2:Math.random()};
  }
  var userName = null;
  var lastHit = null;
  var lastSQL = null;
  var currentCol = null;
  var injuryGrp = null;
  var anatomyGrp = null;
  var side = null;
  var a1 = null;
  var a2 = null;
  var t1 = null;
  var t2 = null;
  var dnd = null;
  var fb = null;  
  var seventh = null;
  var icd10 = null;   
}

var getSession = function(sessionId) {
   var session;
  if (!sessionId) {
    session = new Session();
    sessionsList.push(session);
  } else {
    for (var i=0;i<sessionsList.length;i++) {
      //var tmpObj = ;
      if ( sessionsList[i].id.com1 === sessionId.com1 && 
          sessionsList[i].id.com2 === sessionId.com2) {
        session = sessionsList[i];
      }
    }
  }
  return session;
}

var listSessions = function() {
  if (sessionsList) {
    for (var i=0;i<sessionsList.length;i++) {
      console.log("[sessions] " + sessionsList[i].id.com2 +
                  " userName: " + sessionsList[i].userName +
                  " lastHit: " + sessionsList[i].lastHit);
    }
  } else {
    console.log("[sessions:41,5] No active sessions");
  }
  return sessionsList;
}

var deleteSession = function(sessionId, indx) {
  var idx = -1;
  if (sessionId != null) {
    idx = findIndex(sessionId);
  } else if (indx != null) {
    idx = indx;
  }
  if (idx > -1) {  
    sessionsList = removeSession(idx);
  }
}

var findIndex = function(sessionId) {
  var r, i = -1;
  var found = false;
  i++;
  while (i<sessionsList.length && !found) {
      found = ( sessionsList[i].id.com1 === sessionId.com1 && 
          sessionsList[i].id.com2 === sessionId.com2);
      if (found) r = i;
      i++;
  }
  return r;
}

var findIndexByUser = function(uname) {
  var r, i = -1;
  var found = false;
  i++;
  while (i<sessionsList.length && !found) {
      found = ( sessionsList[i].userName === uname);
      if (found) r = i;
      i++;
  }
  return r;
}

var removeSession = function(idx) {
  var nidx = 0;
  var newArray = new Array();
  for (var i=0;i<sessionsList.length;i++) {
    if ( i === idx ) {
      // skip nidx--;
    } else {
      newArray[nidx] = sessionsList[i];
      nidx++;
    }
  }
  return newArray;
}

var purgeSessions = function() {
  if (sessionsList.length > 0) {
    var currentTime = new Date().getTime();
    var nidx = 0;
    var newArray = new Array();
  
    for (var i=0;i<sessionsList.length;i++) {
	  //console.log('currentTime = ' + currentTime);
	  //console.log('last hit = ' + sessionsList[i].lastHit);
	  //console.log('difference = ' + (currentTime - sessionsList[i].lastHit));
	  if ( sessionsList[i].userName && ((currentTime - sessionsList[i].lastHit) < (PURGEOVERMINUTES*60*1000) ) ) {
	    newArray[nidx] = sessionsList[i];
	    nidx++;
	  }
    }
	console.log("Removed " + (i-nidx) + " sessions. " + newArray.length + " sessions remaining");
    sessionsList = newArray;
  } else {
    console.log("No active sessions");
  }
}

var updateSession = function(data) {
  console.log("sid.com1 " + data['sid'].com1 + ":" + data['sid'].com2 + ":" + data['col']);
  var currentTime = new Date().getTime();
  var c1 = data['sid'].com1.valueOf() * 1;
  var c2 = data['sid'].com2.valueOf() * 1;
  var thisId = {com1:c1,com2:c2};
  console.log("Session ID: " + thisId);
  var thisSession = getSession(thisId);
  if (thisSession == null) {
    return "Session does not exist";
  } else {
    searchHandle[data['col']](thisSession, data);
    thisSession.lastHit = currentTime;	
    return thisSession;
  }
}

exports.getSession = getSession;
exports.findIndexByUser  = findIndexByUser;
exports.updateSession = updateSession;
exports.listSessions = listSessions;
exports.deleteSession = deleteSession;
exports.purgeSessions = purgeSessions;
exports.Session = Session;
exports.Session.doA1 = Session.doA1;
